<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAGEAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAEKAdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDyekNQBynQ1NGTJ2xjvSAeKOmKWkNAC5optFAC0AUZpRQAUtJSE4oAUnFRvJj6npSk
        9SfxqvuLuT+VMBevPrRRRQAUoBPSgAn+tTImO1ACoAlPzjP60mKryyk5UfdHX3pAJLL5jYH3R096YKSi
        mAtNNKaaaAClRC5wozUsdsTy/A9PWrIRVGAMD2oAjSEAfMcn2p3lL6frT6KQDPJT0/WkwASB2NTVHjk/
        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
        Laf8ecP/AFzX+VAH/9k=
</value>
  </data>
</root>